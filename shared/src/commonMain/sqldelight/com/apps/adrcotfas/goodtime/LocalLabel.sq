import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE IF NOT EXISTS localLabel (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT UNIQUE NOT NULL DEFAULT "",
    colorIndex INTEGER NOT NULL,
    orderIndex INTEGER NOT NULL,
    useDefaultTimeProfile INTEGER AS Boolean NOT NULL DEFAULT 1,

    -- countdown columns
    isCountdown INTEGER AS Boolean NOT NULL DEFAULT 1,
    workDuration INTEGER AS Int NOT NULL DEFAULT 25,
    breakDuration INTEGER AS Int NOT NULL DEFAULT 5,
    longBreakDuration INTEGER AS Int NOT NULL DEFAULT 15,
    sessionsBeforeLongBreak INTEGER AS Int NOT NULL DEFAULT 4,

    -- flow column
    workBreakRatio INTEGER AS Int NOT NULL DEFAULT 3,

    isArchived INTEGER AS Boolean NOT NULL DEFAULT 0,
    UNIQUE (name, isArchived)
);

insert:
INSERT OR IGNORE INTO localLabel(
    id,
    name,
    colorIndex,
    orderIndex,
    useDefaultTimeProfile,
    isCountdown,
    workDuration,
    breakDuration,
    longBreakDuration,
    sessionsBeforeLongBreak,
    workBreakRatio,
    isArchived)
VALUES(NULL,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

updateName:
UPDATE localLabel
SET name = :newName WHERE name = :name;

updateColorIndex:
UPDATE localLabel
SET colorIndex = :newColorIndex WHERE name = :name;

updateOrderIndex:
UPDATE localLabel
SET orderIndex = :newOrderIndex WHERE name = :name;

updateShouldFollowDefaultTimeProfile:
UPDATE localLabel
SET useDefaultTimeProfile = :newShouldFollowDefaultTimeProfile WHERE name = :name;

updateTimerProfile:
UPDATE localLabel
SET isCountdown = :newIsCountdown,
    workDuration = :newWorkDuration,
    breakDuration = :newBreakDuration,
    longBreakDuration = :newLongBreakDuration,
    sessionsBeforeLongBreak = :newSessionsBeforeLongBreak,
    workBreakRatio = :newWorkBreakRatio
WHERE name = :name;

updateIsArchived:
UPDATE localLabel
SET isArchived = ? WHERE name = :name;

selectAll:
SELECT *
FROM localLabel ORDER BY orderIndex;

selectByName:
SELECT *
FROM localLabel WHERE name = ?;

selectAllArchived:
SELECT *
FROM localLabel WHERE isArchived IS TRUE ORDER BY orderIndex;

selectLastInsertLabelId:
SELECT last_insert_rowid();

delete:
DELETE FROM localLabel WHERE name = ?;

deleteAll:
DELETE FROM localLabel WHERE name != "";